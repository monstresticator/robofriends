{"map":"{\"version\":3,\"sources\":[\"/Users/bfry3/OneDrive/ZeroMastery/React+Redux/robofriends/src/components/Card.js\",\"/Users/bfry3/OneDrive/ZeroMastery/React+Redux/robofriends/src/components/CardList.js\",\"/Users/bfry3/OneDrive/ZeroMastery/React+Redux/robofriends/src/components/SearchBox.js\",\"/Users/bfry3/OneDrive/ZeroMastery/React+Redux/robofriends/src/components/Scroll.js\",\"/Users/bfry3/OneDrive/ZeroMastery/React+Redux/robofriends/src/containers/App.js\",\"/Users/bfry3/OneDrive/ZeroMastery/React+Redux/robofriends/src/serviceWorker.js\",\"/Users/bfry3/OneDrive/ZeroMastery/React+Redux/robofriends/src/index.js\"],\"names\":[\"Card\",\"_ref\",\"id\",\"name\",\"nickname\",\"motto\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"concat\",\"alt\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"components_Card\",\"key\",\"SearchBox\",\"searchfield\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this$state\",\"foundRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"length\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"yNAiBeA,EAdF,SAAAC,GAAmC,IAAhCC,EAAgCD,EAAhCC,GAAIC,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,SAAUC,EAAYJ,EAAZI,MACnC,OAEMC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,uDACZH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAG,wBAAAC,OAA0BT,EAA1B,YAAwCU,IAAI,WACpDN,EAAAC,EAAAC,cAAA,MAAA,KACGF,EAAAC,EAAAC,cAAA,KAAA,KAAKL,GACLG,EAAAC,EAAAC,cAAA,IAAA,KAAA,UAAWJ,GACXE,EAAAC,EAAAC,cAAA,IAAA,KAAA,UAAWH,MCaTQ,EArBE,SAAAZ,GAAgB,IAAba,EAAab,EAAba,OAEnB,OACMR,EAAAC,EAAAC,cAAA,MAAA,KAECM,EAAOC,IAAI,SAACC,EAAMC,GACjB,OACGX,EAAAC,EAAAC,cAACU,EAAD,CACGC,IAAKF,EACLf,GAAIY,EAAOG,GAAGf,GACdC,KAAMW,EAAOG,GAAGd,KAChBC,SAAUU,EAAOG,GAAGb,SACpBC,MAAOS,EAAOG,GAAGZ,YCAjBe,EAbG,SAAAnB,GAAmCA,EAAhCoB,YAAgC,IAAnBC,EAAmBrB,EAAnBqB,aACjC,OACGhB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACTH,EAAAC,EAAAC,cAAA,QAAA,CACGC,UAAU,+BACVc,KAAK,SACLC,YAAY,gBACZC,SAAWH,MCCTI,EARA,SAACC,GACf,OACGrB,EAAAC,EAAAC,cAAA,MAAA,CAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACjEJ,EAAMK,WC0CCC,qBAvCd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcEI,eAAiB,SAACC,GACjBR,EAAKS,SAAS,CAAEtB,YAAaqB,EAAME,OAAOC,SAd7CX,EAAKY,MAAQ,CACVhC,OAAQ,GACFO,YAAa,IAJTa,mFAQS,IAAAa,EAAAV,KACnBW,MAAM,8CACFC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAE7B,OAAQsC,uCAQrC,IAAAC,EAC0BhB,KAAKS,MAA7BhC,EADFuC,EACEvC,OAAQO,EADVgC,EACUhC,YACViC,EAAcxC,EAAOyC,OAAO,SAAAC,GAChC,OAAOA,EAAMrD,KAAKsD,cAAcC,SAASrC,EAAYoC,iBAGpD,OAAQ3C,EAAO6C,OAGdrD,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,MACTH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACoD,EAAD,CAAWtC,aAAee,KAAKI,iBAC/BnC,EAAAC,EAAAC,cAACqD,EAAD,KACGvD,EAAAC,EAAAC,cAACsD,EAAD,CAAUhD,OAASwC,MAN3BhD,EAAAC,EAAAC,cAAA,KAAA,KAAA,0BA3BSuD,EAAAA,YCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECTNC,EAAAA,EAASC,OACRhE,EAAAC,EAAAC,cAAC+D,EAAD,MACAC,SAASC,eAAe,SDsHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\n// component function with destructured properties\\nconst Card = ({ id, name, nickname, motto }) => {\\n\\treturn (\\n\\t// This is JSX not HTML\\n       <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\\n          <img src={`https://robohash.org/${id}?100x100`} alt='robots' />\\n          <div>\\n             <h2>{name}</h2>\\n             <p>Alias: {nickname}</p>\\n             <p>Motto: {motto}</p>\\n          </div>\\n       </div>\\n    );\\n}\\n\\nexport default Card;\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({ robots }) => {\\n\\t// create a loop for the robots\\n\\treturn (\\n       <div>\\n\\t      { \\n\\t      \\trobots.map((user, i) => {\\n\\t\\t       return (\\n\\t\\t          <Card \\n\\t\\t             key={i} \\n\\t\\t             id={robots[i].id} \\n\\t\\t             name={robots[i].name} \\n\\t\\t             nickname={robots[i].nickname} \\n\\t\\t             motto={robots[i].motto}\\n\\t\\t          />\\n\\t\\t        );\\n\\t        })\\n\\t      }\\n\\t   </div>\\n\\t);\\n}\\n\\nexport default CardList;\",\"import React from 'react';\\n\\nconst SearchBox = ({ searchfield, searchChange }) => {\\n\\treturn (\\n\\t   <div className='pa2'>\\n          <input \\n             className='ba b--green bg-lightest-blue'\\n             type='search' \\n             placeholder='search robots'\\n             onChange={ searchChange } \\n          />\\n       </div>\\n\\t);\\n}\\n\\nexport default SearchBox;\",\"import React from 'react';\\n\\nconst Scroll = (props) => {\\n\\treturn (\\n\\t   <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\\n\\t      {props.children}\\n\\t   </div>\\n\\t);\\n};\\n\\nexport default Scroll;\",\"import React, { Component } from 'react';\\nimport CardList from '../components/CardList';\\nimport SearchBox from '../components/SearchBox';\\nimport Scroll from '../components/Scroll';\\n// import { robots } from './robots';\\nimport './App.css';\\n\\nclass App extends Component {\\n\\tconstructor() {\\n\\t\\tsuper()\\n\\t\\tthis.state = {\\n\\t\\t   robots: [],\\n           searchfield: ''\\t\\n\\t\\t}\\n\\t}\\n\\n    componentDidMount() {\\n    \\tfetch('https://jsonplaceholder.typicode.com/users')\\n    \\t   .then(response => response.json())\\n    \\t   .then(users => this.setState({ robots: users }));\\n    }\\n\\n    // anytime you make your own methods, use arrow functions\\n    onSearchChange = (event) => {\\n    \\tthis.setState({ searchfield: event.target.value })\\t\\n    }\\n\\n\\trender() {\\n\\t   const { robots, searchfield } = this.state;\\n\\t   const foundRobots = robots.filter(robot => {\\n    \\t\\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\\n       })\\n\\n       return !robots.length ?\\n       \\t <h1>Please wait ...</h1> :\\n\\t     (\\n\\t       <div className='tc'>\\n              <h1 className='f1'>RoboFriends</h1>\\n              <SearchBox searchChange={ this.onSearchChange }/>\\n              <Scroll>\\n                 <CardList robots={ foundRobots } />\\n              </Scroll>\\n           </div>\\n         );\\n    }\\n}\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './containers/App';\\nimport * as serviceWorker from './serviceWorker';\\nimport 'tachyons';\\n// if it's not default, must be destructured\\n// import { robots } from './robots';\\n\\nReactDOM.render (\\n\\t<App />, \\n\\tdocument.getElementById('root'));\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){},15:function(e,t,n){},17:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(2),c=n.n(o),l=(n(14),n(3)),i=n(4),s=n(6),u=n(5),h=n(7),m=function(e){var t=e.id,n=e.name,a=e.nickname,o=e.motto;return r.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},r.a.createElement(\"img\",{src:\"https://robohash.org/\".concat(t,\"?100x100\"),alt:\"robots\"}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,n),r.a.createElement(\"p\",null,\"Alias: \",a),r.a.createElement(\"p\",null,\"Motto: \",o)))},d=function(e){var t=e.robots;return r.a.createElement(\"div\",null,t.map(function(e,n){return r.a.createElement(m,{key:n,id:t[n].id,name:t[n].name,nickname:t[n].nickname,motto:t[n].motto})}))},b=function(e){e.searchfield;var t=e.searchChange;return r.a.createElement(\"div\",{className:\"pa2\"},r.a.createElement(\"input\",{className:\"ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots\",onChange:t}))},f=function(e){return r.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"1px solid black\",height:\"800px\"}},e.children)},p=(n(15),function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(s.a)(this,Object(u.a)(t).call(this))).onSearchChange=function(t){e.setState({searchfield:t.target.value})},e.state={robots:[],searchfield:\"\"},e}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e.setState({robots:t})})}},{key:\"render\",value:function(){var e=this.state,t=e.robots,n=e.searchfield,a=t.filter(function(e){return e.name.toLowerCase().includes(n.toLowerCase())});return t.length?r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"h1\",{className:\"f1\"},\"RoboFriends\"),r.a.createElement(b,{searchChange:this.onSearchChange}),r.a.createElement(f,null,r.a.createElement(d,{robots:a}))):r.a.createElement(\"h1\",null,\"Please wait ...\")}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(16);c.a.render(r.a.createElement(p,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(17)}},[[8,1,2]]]);","extractedComments":[]}